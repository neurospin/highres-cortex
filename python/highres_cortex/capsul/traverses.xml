<!--
Copyright Forschungszentrum Jülich GmbH (2018).
Copyright CEA (2014).
Copyright Université Paris XI (2014).

Contributor: Yann Leprince <yann.leprince@ylep.fr>.

This file is part of highres-cortex, a collection of software designed
to process high-resolution magnetic resonance images of the cerebral
cortex.

This software is governed by the CeCILL licence under French law and
abiding by the rules of distribution of free software. You can use,
modify and/or redistribute the software under the terms of the CeCILL
licence as circulated by CEA, CNRS and INRIA at the following URL:
<http://www.cecill.info/>.

As a counterpart to the access to the source code and rights to copy,
modify and redistribute granted by the licence, users are provided only
with a limited warranty and the software's author, the holder of the
economic rights, and the successive licensors have only limited
liability.

In this respect, the user's attention is drawn to the risks associated
with loading, using, modifying and/or developing or reproducing the
software by the user in light of its specific status of scientific
software, that may mean that it is complicated to manipulate, and that
also therefore means that it is reserved for developers and experienced
professionals having in-depth computer knowledge. Users are therefore
encouraged to load and test the software's suitability as regards their
requirements in conditions enabling the security of their systems and/or
data to be ensured and, more generally, to use and operate it in the
same conditions as regards security.

The fact that you are presently reading this means that you have had
knowledge of the CeCILL licence and that you accept its terms.
-->
<pipeline>
    <doc>
      Create cortical traverses

      .. note::
         There is a problem with the propagation of labels: the step size is
         fixed, which means that sometimes the point can skip the corner of a
         voxel, and thus go directly from a bulk voxel to an outside voxel. In
         this case it is recorded as a "dead-end" advection path, no resulting
         label is recorded and it appears as zero in the result.

         This problem also appears in the previous "exchange" step, but is
         mitigated by the subsequent connex component detection (each failed
         propagation is assigned a different label).

         Quick fix: fix the conjunction step to not aggregate zeros.

         TODO: the proper way to fix this would be to force the advection path
         to respect the boundaries of voxels, so that the corner of voxels
         cannot be skipped over. This would also prevent the advection path
         from crossing the thin CSF surface within the sulcus (comes from
         skeleton).
    </doc>
    <process name="laplace"
             module="highres_cortex.capsul.processes.Laplacian"/>
    <process name="distmaps"
             module="highres_cortex.capsul.processes.Distmaps"/>
    <process name="sink1" module="highres_cortex.capsul.processes.VolumeSink"/>
    <process name="sink2" module="highres_cortex.capsul.processes.VolumeSink"/>
    <process name="threshold_CSF_interface"
             module="highres_cortex.capsul.processes.ImageSingleThreshold">
      <set name="binary" value="True"/>
      <set name="mode" value="'eq'"/>
      <set name="threshold" value="50"/>
    </process>
    <process name="threshold_white_interface"
             module="highres_cortex.capsul.processes.ImageSingleThreshold">
      <set name="binary" value="True"/>
      <set name="mode" value="'eq'"/>
      <set name="threshold" value="150"/>
    </process>
    <process name="label_CSF_interface"
             module="highres_cortex.capsul.processes.LabelEachVoxel">
      <set name="first_label" value="100000001"/>
    </process>
    <process name="label_white_interface"
             module="highres_cortex.capsul.processes.LabelEachVoxel">
      <set name="first_label" value="200000001"/>
    </process>
    <process name="negative_cortex"
             module="highres_cortex.capsul.processes.ImageSingleThreshold">
      <set name="binary" value="True"/>
      <set name="mode" value="'di'"/>
      <set name="threshold" value="100"/>
      <set name="fg" value="-1"/>
    </process>
    <process name="negative_cortex_converter"
             module="highres_cortex.capsul.processes.ConvertDataType">
      <set name="data_type" value="'S32'"/>
    </process>
    <process name="CSF_negative_cortex_merger"
             module="highres_cortex.capsul.processes.MergeImagesSameValues"/>
    <process name="CSF_labelled_interface_merger"
             module="highres_cortex.capsul.processes.MergeImagesAllToOne">
      <set name="value" value="200000000"/>
    </process>
    <process name="white_negative_cortex_merger"
             module="highres_cortex.capsul.processes.MergeImagesSameValues"/>
    <process name="white_labelled_interface_merger"
             module="highres_cortex.capsul.processes.MergeImagesAllToOne">
      <set name="value" value="100000000"/>
    </process>
    <process name="CSF_to_white_propagation"
             module="highres_cortex.capsul.processes.PropagateAlongFieldGradient">
      <set name="target_label" value="200000000"/>
      <set name="upfield" value="True"/>
    </process>
    <process name="white_to_CSF_propagation"
             module="highres_cortex.capsul.processes.PropagateAlongFieldGradient">
      <set name="target_label" value="100000000"/>
      <set name="upfield" value="False"/>
    </process>
    <process name="get_exchanged_propvol"
             module="highres_cortex.capsul.processes.GetExchangedPropagationVolume"/>
    <process name="merge_exchanged_on_CSF"
             module="highres_cortex.capsul.processes.MergeImagesOneToOne">
      <set name="label" value="150"/>
      <set name="value" value="0"/>
    </process>
    <process name="merge_exchanged_on_white"
             module="highres_cortex.capsul.processes.MergeImagesOneToOne">
      <set name="label" value="50"/>
      <set name="value" value="0"/>
    </process>
    <process name="CSF_on_bulk_propagation"
             module="highres_cortex.capsul.processes.PropagateAlongFieldGradient">
      <set name="target_label" value="0"/>
      <set name="upfield" value="True"/>
    </process>
    <process name="white_on_bulk_propagation"
             module="highres_cortex.capsul.processes.PropagateAlongFieldGradient">
      <set name="target_label" value="0"/>
      <set name="upfield" value="False"/>
    </process>
    <process name="relabel_conjunction"
             module="highres_cortex.capsul.processes.RelabelConjunction"/>
    <process name="connected_conjunction"
             module="highres_cortex.capsul.processes.ConnectedComponents">
      <set name="connectivity" value="'26'"/>
    </process>
    <process name="merge_regions"
             module="highres_cortex.capsul.processes.MergeCortexColumnRegions"/>
    <process name="relabel"
             module="highres_cortex.capsul.processes.Relabel"/>
    <process name="randomize_labels"
             module="highres_cortex.capsul.processes.RandomizeLabels"/>

    <link source="classif" dest="laplace.classif"/>
    <link source="verbosity" dest="laplace.verbosity"/>
    <link source="laplace_precision" dest="laplace.precision"/>
    <link source="laplace_typical_cortical_thickness"
          dest="laplace.typical_cortical_thickness"/>

    <link source="classif" dest="distmaps.classif"/>
    <link source="distmaps.distwhite" dest="sink1.file"/>
    <link source="distmaps.distCSF" dest="sink2.file"/>

    <link source="distmaps.classif_with_outer_boundaries"
          dest="threshold_CSF_interface.input_image"/>

    <link source="distmaps.classif_with_outer_boundaries"
          dest="threshold_white_interface.input_image"/>

    <link source="threshold_CSF_interface.output_image"
          dest="label_CSF_interface.input_image"/>

    <link source="threshold_white_interface.output_image"
          dest="label_white_interface.input_image"/>

    <link source="classif" dest="negative_cortex.input_image"/>

    <link source="negative_cortex.output_image"
          dest="negative_cortex_converter.input_image"/>

    <link source="negative_cortex_converter.output_image"
          dest="CSF_negative_cortex_merger.input_image"/>
    <link source="label_CSF_interface.output_image"
          dest="CSF_negative_cortex_merger.mask_image"/>

    <link source="CSF_negative_cortex_merger.output_image"
          dest="CSF_labelled_interface_merger.input_image"/>
    <link source="label_white_interface.output_image"
          dest="CSF_labelled_interface_merger.mask_image"/>

    <link source="negative_cortex_converter.output_image"
          dest="white_negative_cortex_merger.input_image"/>
    <link source="label_white_interface.output_image"
          dest="white_negative_cortex_merger.mask_image"/>

    <link source="white_negative_cortex_merger.output_image"
          dest="white_labelled_interface_merger.input_image"/>
    <link source="label_CSF_interface.output_image"
          dest="white_labelled_interface_merger.mask_image"/>

    <link source="verbosity"
          dest="CSF_to_white_propagation.verbosity"/>
    <link source="laplace.laplace_field"
          dest="CSF_to_white_propagation.grad_field"/>
    <link source="CSF_labelled_interface_merger.output_image"
          dest="CSF_to_white_propagation.seeds"/>
    <link source="advection_step_size"
          dest="CSF_to_white_propagation.step_size"/>

    <link source="verbosity"
          dest="white_to_CSF_propagation.verbosity"/>
    <link source="laplace.laplace_field"
          dest="white_to_CSF_propagation.grad_field"/>
    <link source="white_labelled_interface_merger.output_image"
          dest="white_to_CSF_propagation.seeds"/>
    <link source="advection_step_size"
          dest="white_to_CSF_propagation.step_size"/>

    <link source="distmaps.classif_with_outer_boundaries"
          dest="get_exchanged_propvol.classif_with_outer_boundaries"/>
    <link source="CSF_to_white_propagation.output_labels"
          dest="get_exchanged_propvol.CSF_labels_on_white"/>
    <link source="white_to_CSF_propagation.output_labels"
          dest="get_exchanged_propvol.white_labels_on_CSF"/>

    <link source="get_exchanged_propvol.output"
          dest="merge_exchanged_on_CSF.input_image"/>
    <link source="distmaps.classif_with_outer_boundaries"
          dest="merge_exchanged_on_CSF.mask_image"/>

    <link source="get_exchanged_propvol.output"
          dest="merge_exchanged_on_white.input_image"/>
    <link source="distmaps.classif_with_outer_boundaries"
          dest="merge_exchanged_on_white.mask_image"/>

    <link source="verbosity"
          dest="CSF_on_bulk_propagation.verbosity"/>
    <link source="laplace.laplace_field"
          dest="CSF_on_bulk_propagation.grad_field"/>
    <link source="merge_exchanged_on_CSF.output_image"
          dest="CSF_on_bulk_propagation.seeds"/>
    <link source="advection_step_size"
          dest="CSF_on_bulk_propagation.step_size"/>

    <link source="verbosity"
          dest="white_on_bulk_propagation.verbosity"/>
    <link source="laplace.laplace_field"
          dest="white_on_bulk_propagation.grad_field"/>
    <link source="merge_exchanged_on_white.output_image"
          dest="white_on_bulk_propagation.seeds"/>
    <link source="advection_step_size"
          dest="white_on_bulk_propagation.step_size"/>

    <link source="CSF_on_bulk_propagation.output_labels"
          dest="relabel_conjunction.labels1"/>
    <link source="white_on_bulk_propagation.output_labels"
          dest="relabel_conjunction.labels2"/>

    <link source="relabel_conjunction.output"
          dest="connected_conjunction.input_image"/>

    <link source="connected_conjunction.output"
          dest="merge_regions.input_traverses"/>
    <link source="CSF_on_bulk_propagation.dest_points"
          dest="merge_regions.proj_csf"/>
    <link source="white_on_bulk_propagation.dest_points"
          dest="merge_regions.proj_white"/>
    <link source="classif"
          dest="merge_regions.classif"/>
    <link source="goal_traverse_diameter"
          dest="merge_regions.goal_diameter"/>
    <link source="verbosity"
          dest="merge_regions.verbosity"/>

    <link source="merge_regions.output" dest="relabel.input"/>

    <link source="relabel.output" dest="randomize_labels.input"/>

    <!-- TODO add a boolean option and switch for randomizing labels -->
    <link source="randomize_labels.output" dest="cortical_traverses"/>

    <gui>
        <position name="threshold_white_interface" x="464" y="189"/>
        <position name="sink2" x="327" y="127"/>
        <position name="sink1" x="327" y="188"/>
        <position name="relabel" x="3053" y="633"/>
        <position name="negative_cortex" x="371" y="453"/>
        <position name="CSF_negative_cortex_merger" x="1036" y="62"/>
        <position name="CSF_labelled_interface_merger" x="1383" y="41"/>
        <position name="white_to_CSF_propagation" x="1754" y="249"/>
        <position name="merge_exchanged_on_CSF" x="2345" y="-36"/>
        <position name="label_white_interface" x="743" y="212"/>
        <position name="white_negative_cortex_merger" x="1038" y="205"/>
        <position name="get_exchanged_propvol" x="2043" y="158"/>
        <position name="CSF_to_white_propagation" x="1756" y="-39"/>
        <position name="threshold_CSF_interface" x="463" y="-18"/>
        <position name="distmaps" x="89" y="42"/>
        <position name="inputs" x="0" y="211"/>
        <position name="outputs" x="3337" y="595"/>
        <position name="merge_exchanged_on_white" x="2341" y="191"/>
        <position name="merge_regions" x="2904" y="524"/>
        <position name="white_on_bulk_propagation" x="2626" y="254"/>
        <position name="white_labelled_interface_merger" x="1386" y="203"/>
        <position name="relabel_conjunction" x="2896" y="239"/>
        <position name="label_CSF_interface" x="745" y="51"/>
        <position name="connected_conjunction" x="3101" y="250"/>
        <position name="randomize_labels" x="3169" y="606"/>
        <position name="CSF_on_bulk_propagation" x="2628" y="-32"/>
        <position name="negative_cortex_converter" x="596" y="517"/>
        <position name="laplace" x="1378" y="557"/>
    </gui>
</pipeline>
